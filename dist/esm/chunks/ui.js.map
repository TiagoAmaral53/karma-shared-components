{"version":3,"file":"ui.js","sources":["../../../src/lib/utils.ts","../../../src/components/ui/button.tsx"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-neutral-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:ring-offset-neutral-950 dark:focus-visible:ring-neutral-300\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-neutral-900 text-neutral-50 hover:bg-neutral-900/90 dark:bg-neutral-50 dark:text-neutral-900 dark:hover:bg-neutral-50/90\",\n        destructive:\n          \"bg-red-500 text-neutral-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-neutral-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-neutral-200 bg-white hover:bg-neutral-100 hover:text-neutral-900 dark:border-neutral-800 dark:bg-neutral-950 dark:hover:bg-neutral-800 dark:hover:text-neutral-50\",\n        secondary:\n          \"bg-neutral-100 text-neutral-900 hover:bg-neutral-100/80 dark:bg-neutral-800 dark:text-neutral-50 dark:hover:bg-neutral-800/80\",\n        ghost: \"hover:bg-neutral-100 hover:text-neutral-900 dark:hover:bg-neutral-800 dark:hover:text-neutral-50\",\n        link: \"text-neutral-900 underline-offset-4 hover:underline dark:text-neutral-50\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":["cn","_len","arguments","length","inputs","Array","_key","twMerge","clsx","buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","React","forwardRef","_ref","ref","className","_ref$asChild","asChild","props","_objectWithoutProperties","_excluded","_jsx","Slot","_objectSpread","displayName"],"mappings":"gxBAGO,SAASA,IAA4B,IAAA,IAAAC,EAAAC,UAAAC,OAAtBC,EAAMC,IAAAA,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANF,EAAME,GAAAJ,UAAAI,GAC1B,OAAOC,EAAQC,EAAKJ,GACtB,gDCCMK,EAAiBC,EACrB,4VACA,CACEC,SAAU,CACRC,QAAS,CACPC,QAAS,8HACTC,YACE,+GACFC,QACE,kLACFC,UACE,gIACFC,MAAO,mGACPC,KAAM,4EAERC,KAAM,CACJN,QAAS,iBACTO,GAAI,sBACJC,GAAI,uBACJC,KAAM,cAGVC,gBAAiB,CACfX,QAAS,UACTO,KAAM,aAWNK,EAASC,EAAMC,YACnB,SAAAC,EAA0DC,GAAQ,IAA/DC,EAASF,EAATE,UAAWjB,EAAOe,EAAPf,QAASO,EAAIQ,EAAJR,KAAIW,EAAAH,EAAEI,QAAAA,OAAU,IAAHD,GAAQA,EAAKE,uWAAKC,CAAAN,EAAAO,GAEpD,OACEC,EAFWJ,EAAUK,EAAO,wWAEvBC,CAAA,CACHR,UAAW7B,EAAGS,EAAe,CAAEG,QAAAA,EAASO,KAAAA,EAAMU,UAAAA,KAC9CD,IAAKA,GACDI,GAGV,IAEFR,EAAOc,YAAc"}